@page "/settings"

<h1>@L["Settings.Settings"]</h1>

<div class="Settings">
    <div @onclick="(() => ShowingLanguage = !ShowingLanguage)">
        @Icons.Language
        <span>@L["Settings.Language"]</span>
        <div style="display: flex; width: 76px; justify-content: space-between; margin-left: auto; font-size: 24px;">
            <span>@L.Language</span>
            <div style="display: inline-flex; padding-left: 6px; border-left: 1px solid #ccc;">
                @Icons.Settings
            </div>
        </div>
    </div>
</div>

<div @onclick="(() => ShowingLanguage = !ShowingLanguage)" style="transition: height, opacity .2s ease; position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.6); display: flex; justify-content: center; align-items: center; z-index: 10; height: @(ShowingLanguage ? "100%" : "0"); opacity: @(ShowingLanguage ? "1" : "0");">
    <div style="background-color: white; width: min(90%, 360px); height: min(90%, 240px); border-radius: 24px; padding: 12px; display: @(ShowingLanguage ? "block" : "none")" @onclick:stopPropagation=true>
        <span style="font-size: 32px;">@L["Settings.Language"]</span>
        <div style="display: flex; flex-direction: column; margin-top: 12px; border-top: 1px solid #ccc;">
            @foreach (var language in Localization.SupportedLanguages) {
                <div @onclick="(() => SwitchLanguage(language))" style="display: flex; flex-direction: row; border-bottom: 1px solid #ccc; padding-top: 4px; padding-bottom: 4px; color: @(L.Language == language ? "lime" : "inherit")">
                    <span style="font-size: 24px; margin-right: auto;">ãƒ»@language</span>
                </div>
            }
        </div>
    </div>
</div>

@code {
    bool ShowingLanguage = false;

    void SwitchLanguage(string language) {
        if (language != L.Language) {
            JS.LSSetItem("language", language);
            Navigation.NavigateTo(Navigation.Uri, true);
        }
    }
}